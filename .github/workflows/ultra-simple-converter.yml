name: SlideShare Style PowerPoint Auto Converter

on:
  push:
    paths:
      - 'source/*.pptx'
      - 'source/*.ppt'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install LibreOffice and ImageMagick
      run: |
        sudo apt-get update
        sudo apt-get install -y libreoffice imagemagick
        # PDFÂ§âÊèõ„ÅÆ„Åü„ÇÅ„ÅÆ„Éù„É™„Ç∑„ÉºË®≠ÂÆö
        if [ -f /etc/ImageMagick-6/policy.xml ]; then
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
        elif [ -f /etc/ImageMagick-7/policy.xml ]; then
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-7/policy.xml
        fi

    - name: Convert PPTX to PDF
      run: |
        mkdir -p docs/output
        for file in source/*.ppt*; do
          if [ -f "$file" ]; then
            echo "Converting: $file"
            libreoffice --headless --convert-to pdf --outdir docs/output "$file"
          fi
        done

    - name: Convert PDF to PNG images
      run: |
        mkdir -p docs/output/slides
        for pdf in docs/output/*.pdf; do
          if [ -f "$pdf" ]; then
            filename=$(basename "$pdf" .pdf)
            echo "Creating slides for: $pdf"
            convert -density 150 "$pdf" -quality 90 "docs/output/slides/${filename}-%02d.png"
          fi
        done

    - name: Create SlideShare-style viewer
      run: |
        mkdir -p docs
        echo '<!DOCTYPE html>' > docs/index.html
        echo '<html lang="ja">' >> docs/index.html
        echo '<head>' >> docs/index.html
        echo '  <meta charset="UTF-8">' >> docs/index.html
        echo '  <meta name="viewport" content="width=device-width,initial-scale=1.0">' >> docs/index.html
        echo '  <title>SlideShareÈ¢®„Éì„É•„Éº„Ç¢„Éº</title>' >> docs/index.html
        echo '  <style>' >> docs/index.html
        echo '    body { font-family: "Segoe UI", sans-serif; background: #f4f7fa; margin: 0; }' >> docs/index.html
        echo '    .header { background: linear-gradient(90deg, #3275db, #6cd1ff); color: #fff; padding: 20px 0 10px 0; box-shadow: 0 2px 10px rgba(0,0,0,0.05);}' >> docs/index.html
        echo '    .header-content { max-width: 900px; margin: auto; display: flex; align-items: center; justify-content: space-between;}' >> docs/index.html
        echo '    .logo { font-size: 2em; font-weight: bold; }' >> docs/index.html
        echo '    .header-info { font-size: .95em; }' >> docs/index.html
        echo '    .container { max-width: 900px; margin: 32px auto 0 auto; padding: 0 16px; }' >> docs/index.html
        echo '    .presentation-card { background: #fff; border-radius: 18px; margin-bottom: 32px; box-shadow: 0 2px 20px rgba(44,64,102,0.07); padding: 32px; }' >> docs/index.html
        echo '    .presentation-header { display: flex; align-items: center; justify-content: space-between; }' >> docs/index.html
        echo '    .presentation-title { font-size: 1.5em; font-weight: bold; }' >> docs/index.html
        echo '    .slide-img { max-width: 100%; max-height: 60vh; display: block; margin: 32px auto 16px auto; border-radius: 8px; box-shadow: 0 1px 10px rgba(44,64,102,0.07);}' >> docs/index.html
        echo '    .slide-nav { display: flex; gap: 8px; justify-content: center; align-items: center; }' >> docs/index.html
        echo '    .nav-btn { background: #3275db; color: #fff; border: none; border-radius: 6px; padding: 7px 16px; font-size: 1em; cursor: pointer; transition: background .2s; }' >> docs/index.html
        echo '    .nav-btn:disabled { background: #aaa; cursor: not-allowed; }' >> docs/index.html
        echo '    .thumbnails { margin-top: 14px; display: flex; flex-wrap: wrap; gap: 6px; justify-content: center;}' >> docs/index.html
        echo '    .thumb { width: 72px; height: 54px; object-fit: cover; border: 2px solid #eee; border-radius: 4px; cursor: pointer; transition: border .2s;}' >> docs/index.html
        echo '    .thumb.selected { border-color: #3275db; }' >> docs/index.html
        echo '    .pdf-link { display: inline-block; margin-top: 12px; background: #16a085; color: #fff; padding: 6px 18px; border-radius: 6px; text-decoration: none; }' >> docs/index.html
        echo '    .pdf-link:hover { background: #138d75; }' >> docs/index.html
        echo '    @media (max-width: 600px) { .container, .presentation-card { padding: 6px; } }' >> docs/index.html
        echo '  </style>' >> docs/index.html
        echo '</head>' >> docs/index.html
        echo '<body>' >> docs/index.html
        echo '  <div class="header">' >> docs/index.html
        echo '    <div class="header-content">' >> docs/index.html
        echo '      <div class="logo">üìä SlideViewer</div>' >> docs/index.html
        echo '      <div class="header-info">ÊúÄÁµÇÊõ¥Êñ∞: <span id="timestamp"></span></div>' >> docs/index.html
        echo '    </div>' >> docs/index.html
        echo '  </div>' >> docs/index.html
        echo '  <div class="container">' >> docs/index.html
        echo '    <div id="presentations"></div>' >> docs/index.html
        echo '  </div>' >> docs/index.html
        echo '  <script>' >> docs/index.html
        echo '    document.getElementById("timestamp").textContent = new Date().toLocaleString("ja-JP", { timeZone: "Asia/Tokyo" });' >> docs/index.html
        echo '    const presentations = [' >> docs/index.html

        # „Éó„É¨„Çº„É≥ÈÖçÂàóËá™ÂãïÁîüÊàê
        for pdf in docs/output/*.pdf; do
          [ -f "$pdf" ] || continue
          filename=$(basename "$pdf" .pdf)
          echo "      {" >> docs/index.html
          echo "        name: \"$filename\"," >> docs/index.html
          echo "        pdfUrl: \"output/${filename}.pdf\"," >> docs/index.html
          echo -n "        slides: [" >> docs/index.html
          first=true
          for img in docs/output/slides/${filename}-*.png; do
            [ -f "$img" ] || continue
            imgname=$(basename "$img")
            if [ "$first" = true ]; then first=false; else echo -n "," >> docs/index.html; fi
            echo -n "\"output/slides/$imgname\"" >> docs/index.html
          done
          echo "]" >> docs/index.html
          echo "      }," >> docs/index.html
        done

        echo '    ];' >> docs/index.html

        # JSÊú¨‰Ωì„Çíecho„ÅßÂàÜÂâ≤Âá∫Âäõ
        echo '    presentations.forEach((presentation, idx) => {' >> docs/index.html
        echo '      const presDiv = document.createElement("div");' >> docs/index.html
        echo '      presDiv.className = "presentation-card";' >> docs/index.html
        echo '      presDiv.innerHTML = `' >> docs/index.html
        echo '        <div class="presentation-header">' >> docs/index.html
        echo '          <span class="presentation-title">${presentation.name}</span>' >> docs/index.html
        echo '          <a href="${presentation.pdfUrl}" class="pdf-link" download>PDF„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ</a>' >> docs/index.html
        echo '        </div>' >> docs/index.html
        echo '        <div>' >> docs/index.html
        echo '          <img class="slide-img" id="slideimg${idx}" src="${presentation.slides.length ? presentation.slides[0] : ""}" alt="„Çπ„É©„Ç§„Éâ1">' >> docs/index.html
        echo '        </div>' >> docs/index.html
        echo '        <div class="slide-nav">' >> docs/index.html
        echo '          <button class="nav-btn" id="prev${idx}">‚Üê Ââç</button>' >> docs/index.html
        echo '          <span id="slidectr${idx}">1 / ${presentation.slides.length}</span>' >> docs/index.html
        echo '          <button class="nav-btn" id="next${idx}">Ê¨° ‚Üí</button>' >> docs/index.html
        echo '        </div>' >> docs/index.html
        echo '        <div class="thumbnails" id="thumbs${idx}">' >> docs/index.html
        echo '          ${presentation.slides.map((slide, i) => `<img class="thumb${i===0 ? ' selected' : ''}" src="${slide}" data-index="${i}" alt="„Çµ„É†„Éç${i+1}">`).join("")}' >> docs/index.html
        echo '        </div>' >> docs/index.html
        echo '      `;' >> docs/index.html
        echo '      document.getElementById("presentations").appendChild(presDiv);' >> docs/index.html
        echo '      let current = 0;' >> docs/index.html
        echo '      const imgElem = document.getElementById(`slideimg${idx}`);' >> docs/index.html
        echo '      const ctrElem = document.getElementById(`slidectr${idx}`);' >> docs/index.html
        echo '      const prevBtn = document.getElementById(`prev${idx}`);' >> docs/index.html
        echo '      const nextBtn = document.getElementById(`next${idx}`);' >> docs/index.html
        echo '      const thumbs = presDiv.querySelectorAll(".thumb");' >> docs/index.html
        echo '      function show(n) {' >> docs/index.html
        echo '        current = n;' >> docs/index.html
        echo '        imgElem.src = presentation.slides[current];' >> docs/index.html
        echo '        ctrElem.textContent = (current+1) + " / " + presentation.slides.length;' >> docs/index.html
        echo '        thumbs.forEach((t,i)=>t.classList.toggle("selected",i===current));' >> docs/index.html
        echo '        prevBtn.disabled = (current === 0);' >> docs/index.html
        echo '        nextBtn.disabled = (current === presentation.slides.length-1);' >> docs/index.html
        echo '      }' >> docs/index.html
        echo '      prevBtn.onclick = ()=> show(Math.max(current-1,0));' >> docs/index.html
        echo '      nextBtn.onclick = ()=> show(Math.min(current+1,presentation.slides.length-1));' >> docs/index.html
        echo '      thumbs.forEach((thumb,i)=>thumb.onclick=()=>show(i));' >> docs/index.html
        echo '    });' >> docs/index.html
        echo '    if (presentations.length === 0) {' >> docs/index.html
        echo '      document.getElementById("presentations").innerHTML = `' >> docs/index.html
        echo '        <div class="presentation-card">' >> docs/index.html
        echo '          <h2 class="presentation-title">„Éó„É¨„Çº„É≥„ÉÜ„Éº„Ç∑„Éß„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì</h2>' >> docs/index.html
        echo '          <p>source/ „Éï„Ç©„É´„ÉÄ„Å´PowerPoint„Éï„Ç°„Ç§„É´(.pptx)„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</p>' >> docs/index.html
        echo '        </div>' >> docs/index.html
        echo '      `;' >> docs/index.html
        echo '    }' >> docs/index.html
        echo '  </script>' >> docs/index.html
        echo '</body>' >> docs/index.html
        echo '</html>' >> docs/index.html

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "üîÑ Auto-convert PowerPoint slides [$(date '+%Y-%m-%d %H:%M:%S')]" || exit 0
        git push
